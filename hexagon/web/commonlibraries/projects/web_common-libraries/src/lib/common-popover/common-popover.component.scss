@use "sass:math";

$background-white: #ffffff;
$common-border: solid 1px #afafaf;
$common-box-shadow: 2px 2px #00000033;
$overlay-min-size: 125px;

$arrow-size: 34px;
$arrow-offset-corner: 30px; // Should be 30px from relative corner of popover.
$arrow-offset-extension: (math.div($arrow-size, 2) - $arrow-size); // How far out the arrow should extend

%arrow-above {
    margin-bottom: 0;
    bottom: $arrow-size;
    justify-content: flex-end;

    .extension {
        border-bottom: $common-border;
        border-right: $common-border;
        box-shadow: $common-box-shadow;
        bottom: $arrow-offset-extension;
    }
}

%arrow-below {
    margin-bottom: 0;
    top: $arrow-size;

    .extension {
        border-left: $common-border;
        border-top: $common-border;
        top: $arrow-offset-extension;
    }
}

%arrow-left {
    margin-bottom: 0;
    right: $arrow-size;

    .extension {
        border-right: $common-border;
        border-top: $common-border;
        right: $arrow-offset-extension;
    }
}

%arrow-right {
    left: $arrow-size;
    margin-bottom: 0;

    .extension {
        border-bottom: $common-border;
        border-left: $common-border;
        left: $arrow-offset-extension;
    }
}

:host {
    display: none;
}

.overlay-container {
    display: flex;
    flex-direction: column;
    border: $common-border;
    box-shadow: 0 $common-box-shadow;
    position: relative;
    margin-bottom: $arrow-size;

    .extension {
        height: $arrow-size;
        width: $arrow-size;
        position: absolute;
        background-color: $background-white;
        box-sizing: border-box;
        transform: rotate(45deg);
    }

    .overlay-content {
        min-height: $overlay-min-size;
        min-width: $overlay-min-size;
        display: grid;
        background-color: $background-white;
        box-sizing: border-box;
        overflow-y: auto;
        padding: 20px;
        position: relative;

        .bottom-row {
            display: grid;
            grid-template-columns: 1fr min-content;
            column-gap: 20px;
            align-items: center;
            margin-top: 10px;

            .checkbox-label {
                font-size: 15px;
                white-space: nowrap;
            }
        }
    }

    &.menu-mode {
        .overlay-content {
            min-height: 0;
            min-width: 0;
            padding: 0;
        }
    }

    &.menu-mode.above-left,
    &.menu-mode.above-right,
    &.menu-mode.below-left,
    &.menu-mode.below-right {
        margin: 2px 0;
    }

    &.menu-mode.left-above,
    &.menu-mode.left-below,
    &.menu-mode.right-above,
    &.menu-mode.right-below {
        margin: 0 2px;
    }

    &.above-left:not(.menu-mode) {
        @extend %arrow-above;

        .extension {
            right: $arrow-offset-corner;
        }
    }

    &.above-right:not(.menu-mode) {
        @extend %arrow-above;

        .extension {
            left: $arrow-offset-corner;
        }
    }

    &.below-left:not(.menu-mode) {
        @extend %arrow-below;

        .extension {
            right: $arrow-offset-corner;
        }
    }

    &.below-right:not(.menu-mode) {
        @extend %arrow-below;

        .extension {
            left: $arrow-offset-corner;
        }
    }

    &.left-above:not(.menu-mode) {
        @extend %arrow-left;

        .extension {
            bottom: $arrow-offset-corner;
        }
    }

    &.left-below:not(.menu-mode) {
        @extend %arrow-left;

        .extension {
            top: $arrow-offset-corner;
        }
    }

    &.right-above:not(.menu-mode) {
        @extend %arrow-right;

        .extension {
            bottom: $arrow-offset-corner;
        }
    }

    &.right-below:not(.menu-mode) {
        @extend %arrow-right;

        .extension {
            top: $arrow-offset-corner;
        }
    }
}
