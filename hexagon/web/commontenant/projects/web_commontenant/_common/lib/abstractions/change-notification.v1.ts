/**
 * Type of notification this is
 */
export enum TenantChangeNotificationReason$v1 {
    /** Unknown change */
    unknown = 'Unknown',

    /** Tenant updated */
    updated = 'Updated',

    /** Tenant created */
    created = 'Created',

    /** Tenant deleted */
    deleted = 'Deleted',

    /** Tenant enabled jargon */
    enableJargon = 'EnableJargon',

    /** Tenant data sharing updated */
    configuredDataSharingType = 'ConfiguredDataSharingType'
}

/**
 * Change notification object (v1)
 */
export class TenantChangeNotification$v1 {
    /** Name of Change Notification */
    name: string;

    /** The reason for the notification */
    reason: TenantChangeNotificationReason$v1;

    /** Identity Entity Id */
    id: string;

    /** Identity Tenant Id */
    tenantId: string;

    /** Timestamp of change notification creation */
    timestamp: string;

    /**  Unique Identify for this notification generated by the system at creation */
    systemCorrelationId: string;

    constructor(
        params: TenantChangeNotification$v1 = {} as TenantChangeNotification$v1
    ) {
        const {
            name,
            reason = TenantChangeNotificationReason$v1.unknown,
            id,
            timestamp,
            systemCorrelationId,
        } = params;

        this.name = name;
        this.reason = reason;
        this.id = id;
        this.timestamp = timestamp;
        this.systemCorrelationId = systemCorrelationId;
    }
}
