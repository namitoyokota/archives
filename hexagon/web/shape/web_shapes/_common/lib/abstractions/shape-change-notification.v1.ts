/**
 * Identifiers of the different change reasons
 */
export enum ShapeChangeReason$v1 {
  unknown = 'Unknown',
  created = 'Created',
  deleted = 'Deleted',
  groupIds = 'GroupIds',
  name = 'Name',
  description = 'Description',
  primaryContact = 'PrimaryContact',
  radius = 'Radius',
  centerPoint = 'CenterPoint',
  coordinates = 'Coordinates',
  graphicsSettings = 'GraphicsSettings',
  filteringType = 'FilteringType',
  keywords = 'Keywords',
  properties = 'Properties',
  hyperlink = 'Hyperlink'
}

/**
 * An object that represents a change notification
 */
export class ShapeChangeNotification$v1 {
  /** Same for all messages that come from this source */
  name?: string;

  /** The reason for the notification */
  reason?: ShapeChangeReason$v1;

  /** Entity Id */
  id?: string;

  /** Timestamp of change notification creation */
  timestamp?: Date;

  /** Unique Identify for this notification generated by the system at creation */
  systemCorrelationId?: string;

  /** Tenant Id */
  tenantId: string;

  constructor(param: ShapeChangeNotification$v1 = {} as ShapeChangeNotification$v1) {
      const {
          name,
          reason = ShapeChangeReason$v1.unknown,
          id,
          timestamp,
          systemCorrelationId
      } = param;

      this.name = name;

      this.reason = reason;
      this.id = id;
      this.timestamp = timestamp;
      this.systemCorrelationId = systemCorrelationId;
  }
}
