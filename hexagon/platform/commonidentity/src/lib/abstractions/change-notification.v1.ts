/**
 * Type of notification this is
 */
export enum IdentityChangeNotificationReason$v1 {
  /** Unknown change */
  unknown = 'Unknown',

  /** User Role change */
  userRole = 'UserRole',

  /** Refresh Token change */
  refreshToken = 'RefreshToken',

  /**  User removed from tenant change */
  userRemovedFromTenant = 'UserRemovedFromTenant',

  /** Culture change for user */
  culture = 'Locale',

  /** User's status has changed */
  userStatus = 'UserStatus',

  /** The user's login has been refreshed */
  refreshLogin = 'RefreshLogin',
}

/**
 * Change notification object (v1)
 */
export class IdentityChangeNotification$v1 {
  /** Name of Change Notification */
  name: string;

  /** The reason for the notification */
  reason: IdentityChangeNotificationReason$v1;

  /** Identity Entity Id */
  id: string;

  /** Identity Tenant Id */
  tenantId: string;

  /** Timestamp of change notification creation */
  timestamp: string;

  /**  Unique Identify for this notification generated by the system at creation */
  systemCorrelationId: string;

  constructor(
    params: IdentityChangeNotification$v1 = {} as IdentityChangeNotification$v1
  ) {
    const {
      name,
      reason = IdentityChangeNotificationReason$v1.unknown,
      id,
      timestamp,
      systemCorrelationId,
    } = params;

    this.name = name;
    this.reason = reason;
    this.id = id;
    this.timestamp = timestamp;
    this.systemCorrelationId = systemCorrelationId;
  }
}
